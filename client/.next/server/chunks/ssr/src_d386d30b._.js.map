{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/al_habib/Codes/practice/skill-nest/client/src/lib/schemas.ts"],"sourcesContent":["import * as z from \"zod\";\n\n// Course Editor Schemas\nexport const courseSchema = z.object({\n  courseTitle: z.string().min(1, \"Title is required\"),\n  courseDescription: z.string().min(1, \"Description is required\"),\n  courseCategory: z.string().min(1, \"Category is required\"),\n  coursePrice: z.string(),\n  courseStatus: z.boolean(),\n});\n\nexport type CourseFormData = z.infer<typeof courseSchema>;\n\n// Chapter Schemas\nexport const chapterSchema = z.object({\n  title: z.string().min(2, \"Title must be at least 2 characters\"),\n  content: z.string().min(10, \"Content must be at least 10 characters\"),\n  video: z.union([z.string(), z.instanceof(File)]).optional(),\n});\n\nexport type ChapterFormData = z.infer<typeof chapterSchema>;\n\n// Section Schemas\nexport const sectionSchema = z.object({\n  title: z.string().min(2, \"Title must be at least 2 characters\"),\n  description: z.string().min(10, \"Description must be at least 10 characters\"),\n});\n\nexport type SectionFormData = z.infer<typeof sectionSchema>;\n\n// Guest Checkout Schema\nexport const guestSchema = z.object({\n  email: z.string().email(\"Invalid email address\"),\n});\n\nexport type GuestFormData = z.infer<typeof guestSchema>;\n\n// Notification Settings Schema\nexport const notificationSettingsSchema = z.object({\n  courseNotifications: z.boolean(),\n  emailAlerts: z.boolean(),\n  smsAlerts: z.boolean(),\n  notificationFrequency: z.enum([\"immediate\", \"daily\", \"weekly\"]),\n});\n\nexport type NotificationSettingsFormData = z.infer<\n  typeof notificationSettingsSchema\n>;\n"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,MAAM,eAAe,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IACnC,aAAa,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IAC/B,mBAAmB,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IACrC,gBAAgB,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IAClC,aAAa,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD;IACpB,cAAc,CAAA,GAAA,oIAAA,CAAA,UAAS,AAAD;AACxB;AAKO,MAAM,gBAAgB,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IACpC,OAAO,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IACzB,SAAS,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,IAAI;IAC5B,OAAO,CAAA,GAAA,oIAAA,CAAA,QAAO,AAAD,EAAE;QAAC,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD;QAAK,CAAA,GAAA,oIAAA,CAAA,aAAY,AAAD,EAAE;KAAM,EAAE,QAAQ;AAC3D;AAKO,MAAM,gBAAgB,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IACpC,OAAO,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IACzB,aAAa,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,IAAI;AAClC;AAKO,MAAM,cAAc,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IAClC,OAAO,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,KAAK,CAAC;AAC1B;AAKO,MAAM,6BAA6B,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IACjD,qBAAqB,CAAA,GAAA,oIAAA,CAAA,UAAS,AAAD;IAC7B,aAAa,CAAA,GAAA,oIAAA,CAAA,UAAS,AAAD;IACrB,WAAW,CAAA,GAAA,oIAAA,CAAA,UAAS,AAAD;IACnB,uBAAuB,CAAA,GAAA,oIAAA,CAAA,OAAM,AAAD,EAAE;QAAC;QAAa;QAAS;KAAS;AAChE","debugId":null}}]
}