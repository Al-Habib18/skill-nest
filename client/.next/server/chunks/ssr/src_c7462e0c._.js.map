{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///home/al_habib/Codes/practice/skill-nest/client/src/state/api.ts"],"sourcesContent":["/** @format */\n\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { BaseQueryApi, FetchArgs } from \"@reduxjs/toolkit/query\";\nimport { User } from \"@clerk/nextjs/server\";\nimport { Clerk } from \"@clerk/clerk-js\";\nimport { toast } from \"sonner\";\nimport { useParams } from 'next/navigation';\n\nconst customBaseQuery = async (\n    args: string | FetchArgs,\n    api: BaseQueryApi,\n    extraOptions: any\n) => {\n    const baseQuery = fetchBaseQuery({\n        baseUrl:\n            process.env.NEXT_PUBLIC_API_BASE_URL || \"http://localhost:8001\",\n        prepareHeaders: async (headers) => {\n            const token = await window.Clerk?.session?.getToken();\n            if (token) {\n                headers.set(\"Authorization\", `Bearer ${token}`);\n            }\n            return headers;\n        },\n    });\n\n    try {\n        const result: any = await baseQuery(args, api, extraOptions);\n\n        if (result.error) {\n            const errorData = result.error.data;\n            const errorMessage =\n                errorData?.message ||\n                result.error.status.toString() ||\n                \"An error occurred\";\n            toast.error(`Error: ${errorMessage}`);\n        }\n\n        const isMutationRequest =\n            (args as FetchArgs).method && (args as FetchArgs).method !== \"GET\";\n\n        if (isMutationRequest) {\n            const successMessage = result.data?.message;\n            if (successMessage) toast.success(successMessage);\n        }\n\n        if (result.data) {\n            result.data = result.data.data;\n        } else if (\n            result.error?.status === 204 ||\n            result.meta?.response?.status === 24\n        ) {\n            return { data: null };\n        }\n\n        return result;\n    } catch (error: unknown) {\n        const errorMessage =\n            error instanceof Error ? error.message : \"Unknown error\";\n\n        return { error: { status: \"FETCH_ERROR\", error: errorMessage } };\n    }\n};\n\nexport const api = createApi({\n    baseQuery: customBaseQuery,\n    reducerPath: \"api\",\n    tagTypes: [\"Courses\", \"Users\", \"UserCourseProgress\"],\n    endpoints: (build) => ({\n        /* \n    ===============\n    USER CLERK\n    =============== \n    */\n        updateUser: build.mutation<User, Partial<User> & { userId: string }>({\n            query: ({ userId, ...updatedUser }) => ({\n                url: `api/users/clerk/${userId}`,\n                method: \"PUT\",\n                body: updatedUser,\n            }),\n            invalidatesTags: [\"Users\"],\n        }),\n\n    /* \n    ===============\n    COURSES\n    =============== \n    */\n        getCourses: build.query<Course[], { category?: string }>({\n            query: ({ category }) => ({\n                url: \"api/courses\",\n                params: { category },\n            }),\n            providesTags: [\"Courses\"],\n        }),\n\n        getCourse: build.query<Course, string>({\n            query: (courseId) => `api/courses/${courseId}`,\n            providesTags: (result, error, id) => [{ type: \"Courses\", id }],\n        }),\n\n        createCourse: build.mutation<\n            Course,\n            { teacherId: string; teacherName: string }\n        >({\n            query: (body) => ({\n                url: `api/courses`,\n                method: \"POST\",\n                body,\n            }),\n            invalidatesTags: [\"Courses\"],\n        }),\n\n        updateCourse: build.mutation<\n            Course,\n            { courseId: string; formData: FormData }\n        >({\n            query: ({ courseId, formData }) => ({\n                url: `api/courses/${courseId}`,\n                method: \"PUT\",\n                body: formData,\n            }),\n            invalidatesTags: (result, error, { courseId }) => [\n                { type: \"Courses\", id: courseId },\n            ],\n        }),\n\n        deleteCourse: build.mutation<{ message: string }, string>({\n            query: (courseId) => ({\n                url: `api/courses/${courseId}`,\n                method: \"DELETE\",\n            }),\n            invalidatesTags: [\"Courses\"],\n        }),\n\n        getUploadVideoUrl: build.mutation<\n            { uploadUrl: string; videoUrl: string },\n            {\n                courseId: string;\n                chapterId: string;\n                sectionId: string;\n                fileName: string;\n                fileType: string;\n            }\n        >({\n            query: ({\n                courseId,\n                sectionId,\n                chapterId,\n                fileName,\n                fileType,\n            }) => ({\n                url: `api/courses/${courseId}/sections/${sectionId}/chapters/${chapterId}/get-upload-url`,\n                method: \"POST\",\n                body: { fileName, fileType },\n            }),\n        }),\n\n        /* \n    ===============\n    TRANSACTIONS\n    =============== \n    */\n        getTransactions: build.query<Transaction[], string>({\n            query: (userId) => `api/transactions?userId=${userId}`,\n        }),\n        createStripePaymentIntent: build.mutation<\n            { clientSecret: string },\n            { amount: number }\n        >({\n            query: ({ amount }) => ({\n                url: `api/transactions/stripe/payment-intent`,\n                method: \"POST\",\n                body: { amount },\n            }),\n        }),\n\n        \n        createTransaction: build.mutation<Transaction, Partial<Transaction>>({\n            query: (transaction) => ({\n                url: \"api/transactions\",\n                method: \"POST\",\n                body: transaction,\n            }),\n        }),\n\n        /* \n    ===============\n    USER COURSE PROGRESS\n    =============== \n    */\n        getUserEnrolledCourses: build.query<Course[], string>({\n            query: (userId) =>\n                `users/course-progress/${userId}/enrolled-courses`,\n            providesTags: [\"Courses\", \"UserCourseProgress\"],\n        }),\n\n        getUserCourseProgress: build.query<\n            UserCourseProgress,\n            { userId: string; courseId: string }\n        >({\n            query: ({ userId, courseId }) =>\n                `users/course-progress/${userId}/courses/${courseId}`,\n            providesTags: [\"UserCourseProgress\"],\n        }),\n\n        updateUserCourseProgress: build.mutation<\n            UserCourseProgress,\n            {\n                userId: string;\n                courseId: string;\n                progressData: {\n                    sections: SectionProgress[];\n                };\n            }\n        >({\n            query: ({ userId, courseId, progressData }) => ({\n                url: `users/course-progress/${userId}/courses/${courseId}`,\n                method: \"PUT\",\n                body: progressData,\n            }),\n            invalidatesTags: [\"UserCourseProgress\"],\n            async onQueryStarted(\n                { userId, courseId, progressData },\n                { dispatch, queryFulfilled }\n            ) {\n                const patchResult = dispatch(\n                    api.util.updateQueryData(\n                        \"getUserCourseProgress\",\n                        { userId, courseId },\n                        (draft) => {\n                            Object.assign(draft, {\n                                ...draft,\n                                sections: progressData.sections,\n                            });\n                        }\n                    )\n                );\n                try {\n                    await queryFulfilled;\n                } catch {\n                    patchResult.undo();\n                }\n            },\n        }),\n    }),\n});\n\nexport const {\n    useUpdateUserMutation,\n    useCreateCourseMutation,\n    useUpdateCourseMutation,\n    useDeleteCourseMutation,\n\n    /* courses */\n    useGetCoursesQuery,\n    useGetCourseQuery,\n    useGetUploadVideoUrlMutation,\n\n    /* transactions */\n    useGetTransactionsQuery,\n    useCreateTransactionMutation,\n    useCreateStripePaymentIntentMutation,\n\n    /* user course progress */\n    useGetUserEnrolledCoursesQuery,\n    useGetUserCourseProgressQuery,\n    useUpdateUserCourseProgressMutation,\n} = api;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///home/al_habib/Codes/practice/skill-nest/client/src/components/Loading.tsx"],"sourcesContent":["/** @format */\n\nimport { Loader2 } from \"lucide-react\";\nimport React from \"react\";\n\nfunction Loading() {\n    return (\n        <div className=\"fixed inset-0 flex gap-2 items-center justify-center bg-background/50\">\n            <Loader2 className=\"w-6 h-6 animate-spin text-primary-700\" />\n            <span className=\"text-sm font-medium text-primary-700\">\n                Loading...\n            </span>\n        </div>\n    );\n}\n\nexport default Loading;\n"],"names":[],"mappings":"AAAA,YAAY;;;;AAEZ;;;AAGA,SAAS;IACL,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC,iNAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;0BACnB,8OAAC;gBAAK,WAAU;0BAAuC;;;;;;;;;;;;AAKnE;uCAEe","debugId":null}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file:///home/al_habib/Codes/practice/skill-nest/client/src/components/ui/select.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Select = registerClientReference(\n    function() { throw new Error(\"Attempted to call Select() from the server but Select is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"Select\",\n);\nexport const SelectContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectContent() from the server but SelectContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectContent\",\n);\nexport const SelectGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectGroup() from the server but SelectGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectGroup\",\n);\nexport const SelectItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectItem() from the server but SelectItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectItem\",\n);\nexport const SelectLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectLabel() from the server but SelectLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectLabel\",\n);\nexport const SelectScrollDownButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollDownButton() from the server but SelectScrollDownButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectScrollDownButton\",\n);\nexport const SelectScrollUpButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollUpButton() from the server but SelectScrollUpButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectScrollUpButton\",\n);\nexport const SelectSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectSeparator() from the server but SelectSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectSeparator\",\n);\nexport const SelectTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectTrigger() from the server but SelectTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectTrigger\",\n);\nexport const SelectValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectValue() from the server but SelectValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectValue\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,8DACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,8DACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///home/al_habib/Codes/practice/skill-nest/client/src/components/ui/select.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Select = registerClientReference(\n    function() { throw new Error(\"Attempted to call Select() from the server but Select is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"Select\",\n);\nexport const SelectContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectContent() from the server but SelectContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectContent\",\n);\nexport const SelectGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectGroup() from the server but SelectGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectGroup\",\n);\nexport const SelectItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectItem() from the server but SelectItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectItem\",\n);\nexport const SelectLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectLabel() from the server but SelectLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectLabel\",\n);\nexport const SelectScrollDownButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollDownButton() from the server but SelectScrollDownButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectScrollDownButton\",\n);\nexport const SelectScrollUpButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollUpButton() from the server but SelectScrollUpButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectScrollUpButton\",\n);\nexport const SelectSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectSeparator() from the server but SelectSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectSeparator\",\n);\nexport const SelectTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectTrigger() from the server but SelectTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectTrigger\",\n);\nexport const SelectValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectValue() from the server but SelectValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectValue\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,0CACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,0CACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///home/al_habib/Codes/practice/skill-nest/client/src/app/%28dashboad%29/user/billing/page.tsx"],"sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport { useGetTransactionsQuery } from \"@/state/api\";\nimport { useUser } from \"@clerk/nextjs\";\nimport React, { useState } from \"react\";\nimport Loading from \"@/components/Loading\";\nimport { Select, SelectTrigger, SelectValue } from \"@/components/ui/select\";\n\nconst UserBillingPage = () => {\n    const [paymentType, setPaymentType] = useState(\"all\");\n    const { user, isLoaded } = useUser();\n    const { data: transactions, isLoading } = useGetTransactionsQuery(\n        user?.id ?? \"\",\n        { skip: !isLoaded || !user }\n    );\n\n    const filteredData =\n        transactions?.filter((transaction) => {\n            const matchesTypes =\n                paymentType === \"all\" ||\n                transaction.paymentProvider === paymentType;\n            return matchesTypes;\n        }) || [];\n\n    if (!isLoaded) return <Loading />;\n    if (!user)\n        return <div>Please sign in to access your billing information</div>;\n\n    return (\n        <div className=\"space-y-8\">\n            <div className=\"space-y-6 bg-customgreys-secondarybg\">\n                <h2 className=\" text-2xl font-semibold\">Payment History</h2>\n                <div className=\"flex space-x-4\">\n                    <Select value={paymentType} onValueChange={setPaymentType}>\n                        <SelectTrigger className=\"w-[180px] border-none bg-customgreys-primarybg\">\n                            {\" \"}\n                            <SelectValue placeholder=\"Payment Type\"></SelectValue>\n                        </SelectTrigger>\n                    </Select>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default UserBillingPage;\n"],"names":[],"mappings":"AAAA,YAAY;;;;AAGZ;AACA;AACA;AACA;AACA;;;;;;;AAEA,MAAM,kBAAkB;IACpB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,+KAAA,CAAA,UAAO,AAAD;IACjC,MAAM,EAAE,MAAM,YAAY,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,mHAAA,CAAA,0BAAuB,AAAD,EAC5D,MAAM,MAAM,IACZ;QAAE,MAAM,CAAC,YAAY,CAAC;IAAK;IAG/B,MAAM,eACF,cAAc,OAAO,CAAC;QAClB,MAAM,eACF,gBAAgB,SAChB,YAAY,eAAe,KAAK;QACpC,OAAO;IACX,MAAM,EAAE;IAEZ,IAAI,CAAC,UAAU,qBAAO,8OAAC,6HAAA,CAAA,UAAO;;;;;IAC9B,IAAI,CAAC,MACD,qBAAO,8OAAC;kBAAI;;;;;;IAEhB,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;;8BACX,8OAAC;oBAAG,WAAU;8BAA0B;;;;;;8BACxC,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC,kIAAA,CAAA,SAAM;wBAAC,OAAO;wBAAa,eAAe;kCACvC,cAAA,8OAAC,kIAAA,CAAA,gBAAa;4BAAC,WAAU;;gCACpB;8CACD,8OAAC,kIAAA,CAAA,cAAW;oCAAC,aAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOrD;uCAEe","debugId":null}}]
}