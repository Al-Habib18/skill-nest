{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///home/al_habib/Codes/practice/skill-nest/client/src/state/api.ts"],"sourcesContent":["/** @format */\n\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { BaseQueryApi, FetchArgs } from \"@reduxjs/toolkit/query\";\nimport { User } from \"@clerk/nextjs/server\";\nimport { Clerk } from \"@clerk/clerk-js\";\nimport { toast } from \"sonner\";\n\nconst customBaseQuery = async (\n    args: string | FetchArgs,\n    api: BaseQueryApi,\n    extraOptions: any\n) => {\n    const baseQuery = fetchBaseQuery({\n        baseUrl:\n            process.env.NEXT_PUBLIC_API_BASE_URL || \"http://localhost:8001\",\n        prepareHeaders: async (headers) => {\n            const token = await window.Clerk?.session?.getToken();\n            if (token) {\n                headers.set(\"Authorization\", `Bearer ${token}`);\n            }\n            return headers;\n        },\n    });\n\n    try {\n        const result: any = await baseQuery(args, api, extraOptions);\n\n        if (result.error) {\n            const errorData = result.error.data;\n            const errorMessage =\n                errorData?.message ||\n                result.error.status.toString() ||\n                \"An error occurred\";\n            toast.error(`Error: ${errorMessage}`);\n        }\n\n        const isMutationRequest =\n            (args as FetchArgs).method && (args as FetchArgs).method !== \"GET\";\n\n        if (isMutationRequest) {\n            const successMessage = result.data?.message;\n            if (successMessage) toast.success(successMessage);\n        }\n\n        if (result.data) {\n            result.data = result.data.data;\n        } else if (\n            result.error?.status === 204 ||\n            result.meta?.response?.status === 24\n        ) {\n            return { data: null };\n        }\n\n        return result;\n    } catch (error: unknown) {\n        const errorMessage =\n            error instanceof Error ? error.message : \"Unknown error\";\n\n        return { error: { status: \"FETCH_ERROR\", error: errorMessage } };\n    }\n};\n\nexport const api = createApi({\n    baseQuery: customBaseQuery,\n    reducerPath: \"api\",\n    tagTypes: [\"Courses\", \"Users\", \"UserCourseProgress\"],\n    endpoints: (build) => ({\n        /* \n    ===============\n    USER CLERK\n    =============== \n    */\n        updateUser: build.mutation<User, Partial<User> & { userId: string }>({\n            query: ({ userId, ...updatedUser }) => ({\n                url: `api/users/clerk/${userId}`,\n                method: \"PUT\",\n                body: updatedUser,\n            }),\n            invalidatesTags: [\"Users\"],\n        }),\n\n    /* \n    ===============\n    COURSES\n    =============== \n    */\n        getCourses: build.query<Course[], { category?: string }>({\n            query: ({ category }) => ({\n                url: \"api/courses\",\n                params: { category },\n            }),\n            providesTags: [\"Courses\"],\n        }),\n\n        getCourse: build.query<Course, string>({\n            query: (id) => `api/courses/${id}`,\n            providesTags: (result, error, id) => [{ type: \"Courses\", id }],\n        }),\n\n        createCourse: build.mutation<\n            Course,\n            { teacherId: string; teacherName: string }\n        >({\n            query: (body) => ({\n                url: `api/courses`,\n                method: \"POST\",\n                body,\n            }),\n            invalidatesTags: [\"Courses\"],\n        }),\n\n        updateCourse: build.mutation<\n            Course,\n            { courseId: string; formData: FormData }\n        >({\n            query: ({ courseId, formData }) => ({\n                url: `api/courses/${courseId}`,\n                method: \"PUT\",\n                body: formData,\n            }),\n            invalidatesTags: (result, error, { courseId }) => [\n                { type: \"Courses\", id: courseId },\n            ],\n        }),\n\n        deleteCourse: build.mutation<{ message: string }, string>({\n            query: (courseId) => ({\n                url: `api/courses/${courseId}`,\n                method: \"DELETE\",\n            }),\n            invalidatesTags: [\"Courses\"],\n        }),\n\n        getUploadVideoUrl: build.mutation<\n            { uploadUrl: string; videoUrl: string },\n            {\n                courseId: string;\n                chapterId: string;\n                sectionId: string;\n                fileName: string;\n                fileType: string;\n            }\n        >({\n            query: ({\n                courseId,\n                sectionId,\n                chapterId,\n                fileName,\n                fileType,\n            }) => ({\n                url: `api/courses/${courseId}/sections/${sectionId}/chapters/${chapterId}/get-upload-url`,\n                method: \"POST\",\n                body: { fileName, fileType },\n            }),\n        }),\n\n        /* \n    ===============\n    TRANSACTIONS\n    =============== \n    */\n        getTransactions: build.query<Transaction[], string>({\n            query: (userId) => `transactions?userId=${userId}`,\n        }),\n        createStripePaymentIntent: build.mutation<\n            { clientSecret: string },\n            { amount: number }\n        >({\n            query: ({ amount }) => ({\n                url: `/transactions/stripe/payment-intent`,\n                method: \"POST\",\n                body: { amount },\n            }),\n        }),\n        createTransaction: build.mutation<Transaction, Partial<Transaction>>({\n            query: (transaction) => ({\n                url: \"transactions\",\n                method: \"POST\",\n                body: transaction,\n            }),\n        }),\n\n        /* \n    ===============\n    USER COURSE PROGRESS\n    =============== \n    */\n        getUserEnrolledCourses: build.query<Course[], string>({\n            query: (userId) =>\n                `users/course-progress/${userId}/enrolled-courses`,\n            providesTags: [\"Courses\", \"UserCourseProgress\"],\n        }),\n\n        getUserCourseProgress: build.query<\n            UserCourseProgress,\n            { userId: string; courseId: string }\n        >({\n            query: ({ userId, courseId }) =>\n                `users/course-progress/${userId}/courses/${courseId}`,\n            providesTags: [\"UserCourseProgress\"],\n        }),\n\n        updateUserCourseProgress: build.mutation<\n            UserCourseProgress,\n            {\n                userId: string;\n                courseId: string;\n                progressData: {\n                    sections: SectionProgress[];\n                };\n            }\n        >({\n            query: ({ userId, courseId, progressData }) => ({\n                url: `users/course-progress/${userId}/courses/${courseId}`,\n                method: \"PUT\",\n                body: progressData,\n            }),\n            invalidatesTags: [\"UserCourseProgress\"],\n            async onQueryStarted(\n                { userId, courseId, progressData },\n                { dispatch, queryFulfilled }\n            ) {\n                const patchResult = dispatch(\n                    api.util.updateQueryData(\n                        \"getUserCourseProgress\",\n                        { userId, courseId },\n                        (draft) => {\n                            Object.assign(draft, {\n                                ...draft,\n                                sections: progressData.sections,\n                            });\n                        }\n                    )\n                );\n                try {\n                    await queryFulfilled;\n                } catch {\n                    patchResult.undo();\n                }\n            },\n        }),\n    }),\n});\n\nexport const {\n    useUpdateUserMutation,\n    useCreateCourseMutation,\n    useUpdateCourseMutation,\n    useDeleteCourseMutation,\n    useGetCoursesQuery,\n    useGetCourseQuery,\n    useGetUploadVideoUrlMutation,\n    useGetTransactionsQuery,\n    useCreateTransactionMutation,\n    useCreateStripePaymentIntentMutation,\n    useGetUserEnrolledCoursesQuery,\n    useGetUserCourseProgressQuery,\n    useUpdateUserCourseProgressMutation,\n} = api;\n"],"names":[],"mappings":"AAAA,YAAY;;;;;;;;;;;;;;;;AAEZ;AAAA;AAIA;;;AAEA,MAAM,kBAAkB,OACpB,MACA,KACA;IAEA,MAAM,YAAY,CAAA,GAAA,gLAAA,CAAA,iBAAc,AAAD,EAAE;QAC7B,SACI,6DAAwC;QAC5C,gBAAgB,OAAO;YACnB,MAAM,QAAQ,MAAM,OAAO,KAAK,EAAE,SAAS;YAC3C,IAAI,OAAO;gBACP,QAAQ,GAAG,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO;YAClD;YACA,OAAO;QACX;IACJ;IAEA,IAAI;QACA,MAAM,SAAc,MAAM,UAAU,MAAM,KAAK;QAE/C,IAAI,OAAO,KAAK,EAAE;YACd,MAAM,YAAY,OAAO,KAAK,CAAC,IAAI;YACnC,MAAM,eACF,WAAW,WACX,OAAO,KAAK,CAAC,MAAM,CAAC,QAAQ,MAC5B;YACJ,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,cAAc;QACxC;QAEA,MAAM,oBACF,AAAC,KAAmB,MAAM,IAAI,AAAC,KAAmB,MAAM,KAAK;QAEjE,IAAI,mBAAmB;YACnB,MAAM,iBAAiB,OAAO,IAAI,EAAE;YACpC,IAAI,gBAAgB,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QACtC;QAEA,IAAI,OAAO,IAAI,EAAE;YACb,OAAO,IAAI,GAAG,OAAO,IAAI,CAAC,IAAI;QAClC,OAAO,IACH,OAAO,KAAK,EAAE,WAAW,OACzB,OAAO,IAAI,EAAE,UAAU,WAAW,IACpC;YACE,OAAO;gBAAE,MAAM;YAAK;QACxB;QAEA,OAAO;IACX,EAAE,OAAO,OAAgB;QACrB,MAAM,eACF,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAE7C,OAAO;YAAE,OAAO;gBAAE,QAAQ;gBAAe,OAAO;YAAa;QAAE;IACnE;AACJ;AAEO,MAAM,MAAM,CAAA,GAAA,kNAAA,CAAA,YAAS,AAAD,EAAE;IACzB,WAAW;IACX,aAAa;IACb,UAAU;QAAC;QAAW;QAAS;KAAqB;IACpD,WAAW,CAAC,QAAU,CAAC;YACnB;;;;IAIJ,GACI,YAAY,MAAM,QAAQ,CAA2C;gBACjE,OAAO,CAAC,EAAE,MAAM,EAAE,GAAG,aAAa,GAAK,CAAC;wBACpC,KAAK,CAAC,gBAAgB,EAAE,QAAQ;wBAChC,QAAQ;wBACR,MAAM;oBACV,CAAC;gBACD,iBAAiB;oBAAC;iBAAQ;YAC9B;YAEJ;;;;IAIA,GACI,YAAY,MAAM,KAAK,CAAkC;gBACrD,OAAO,CAAC,EAAE,QAAQ,EAAE,GAAK,CAAC;wBACtB,KAAK;wBACL,QAAQ;4BAAE;wBAAS;oBACvB,CAAC;gBACD,cAAc;oBAAC;iBAAU;YAC7B;YAEA,WAAW,MAAM,KAAK,CAAiB;gBACnC,OAAO,CAAC,KAAO,CAAC,YAAY,EAAE,IAAI;gBAClC,cAAc,CAAC,QAAQ,OAAO,KAAO;wBAAC;4BAAE,MAAM;4BAAW;wBAAG;qBAAE;YAClE;YAEA,cAAc,MAAM,QAAQ,CAG1B;gBACE,OAAO,CAAC,OAAS,CAAC;wBACd,KAAK,CAAC,WAAW,CAAC;wBAClB,QAAQ;wBACR;oBACJ,CAAC;gBACD,iBAAiB;oBAAC;iBAAU;YAChC;YAEA,cAAc,MAAM,QAAQ,CAG1B;gBACE,OAAO,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAK,CAAC;wBAChC,KAAK,CAAC,YAAY,EAAE,UAAU;wBAC9B,QAAQ;wBACR,MAAM;oBACV,CAAC;gBACD,iBAAiB,CAAC,QAAQ,OAAO,EAAE,QAAQ,EAAE,GAAK;wBAC9C;4BAAE,MAAM;4BAAW,IAAI;wBAAS;qBACnC;YACL;YAEA,cAAc,MAAM,QAAQ,CAA8B;gBACtD,OAAO,CAAC,WAAa,CAAC;wBAClB,KAAK,CAAC,YAAY,EAAE,UAAU;wBAC9B,QAAQ;oBACZ,CAAC;gBACD,iBAAiB;oBAAC;iBAAU;YAChC;YAEA,mBAAmB,MAAM,QAAQ,CAS/B;gBACE,OAAO,CAAC,EACJ,QAAQ,EACR,SAAS,EACT,SAAS,EACT,QAAQ,EACR,QAAQ,EACX,GAAK,CAAC;wBACH,KAAK,CAAC,YAAY,EAAE,SAAS,UAAU,EAAE,UAAU,UAAU,EAAE,UAAU,eAAe,CAAC;wBACzF,QAAQ;wBACR,MAAM;4BAAE;4BAAU;wBAAS;oBAC/B,CAAC;YACL;YAEA;;;;IAIJ,GACI,iBAAiB,MAAM,KAAK,CAAwB;gBAChD,OAAO,CAAC,SAAW,CAAC,oBAAoB,EAAE,QAAQ;YACtD;YACA,2BAA2B,MAAM,QAAQ,CAGvC;gBACE,OAAO,CAAC,EAAE,MAAM,EAAE,GAAK,CAAC;wBACpB,KAAK,CAAC,mCAAmC,CAAC;wBAC1C,QAAQ;wBACR,MAAM;4BAAE;wBAAO;oBACnB,CAAC;YACL;YACA,mBAAmB,MAAM,QAAQ,CAAoC;gBACjE,OAAO,CAAC,cAAgB,CAAC;wBACrB,KAAK;wBACL,QAAQ;wBACR,MAAM;oBACV,CAAC;YACL;YAEA;;;;IAIJ,GACI,wBAAwB,MAAM,KAAK,CAAmB;gBAClD,OAAO,CAAC,SACJ,CAAC,sBAAsB,EAAE,OAAO,iBAAiB,CAAC;gBACtD,cAAc;oBAAC;oBAAW;iBAAqB;YACnD;YAEA,uBAAuB,MAAM,KAAK,CAGhC;gBACE,OAAO,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,GACxB,CAAC,sBAAsB,EAAE,OAAO,SAAS,EAAE,UAAU;gBACzD,cAAc;oBAAC;iBAAqB;YACxC;YAEA,0BAA0B,MAAM,QAAQ,CAStC;gBACE,OAAO,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAK,CAAC;wBAC5C,KAAK,CAAC,sBAAsB,EAAE,OAAO,SAAS,EAAE,UAAU;wBAC1D,QAAQ;wBACR,MAAM;oBACV,CAAC;gBACD,iBAAiB;oBAAC;iBAAqB;gBACvC,MAAM,gBACF,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,EAClC,EAAE,QAAQ,EAAE,cAAc,EAAE;oBAE5B,MAAM,cAAc,SAChB,IAAI,IAAI,CAAC,eAAe,CACpB,yBACA;wBAAE;wBAAQ;oBAAS,GACnB,CAAC;wBACG,OAAO,MAAM,CAAC,OAAO;4BACjB,GAAG,KAAK;4BACR,UAAU,aAAa,QAAQ;wBACnC;oBACJ;oBAGR,IAAI;wBACA,MAAM;oBACV,EAAE,OAAM;wBACJ,YAAY,IAAI;oBACpB;gBACJ;YACJ;QACJ,CAAC;AACL;AAEO,MAAM,EACT,qBAAqB,EACrB,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,kBAAkB,EAClB,iBAAiB,EACjB,4BAA4B,EAC5B,uBAAuB,EACvB,4BAA4B,EAC5B,oCAAoC,EACpC,8BAA8B,EAC9B,6BAA6B,EAC7B,mCAAmC,EACtC,GAAG","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///home/al_habib/Codes/practice/skill-nest/client/src/lib/schemas.ts"],"sourcesContent":["import * as z from \"zod\";\n\n// Course Editor Schemas\nexport const courseSchema = z.object({\n  courseTitle: z.string().min(1, \"Title is required\"),\n  courseDescription: z.string().min(1, \"Description is required\"),\n  courseCategory: z.string().min(1, \"Category is required\"),\n  coursePrice: z.string(),\n  courseStatus: z.boolean(),\n});\n\nexport type CourseFormData = z.infer<typeof courseSchema>;\n\n// Chapter Schemas\nexport const chapterSchema = z.object({\n  title: z.string().min(2, \"Title must be at least 2 characters\"),\n  content: z.string().min(10, \"Content must be at least 10 characters\"),\n  video: z.union([z.string(), z.instanceof(File)]).optional(),\n});\n\nexport type ChapterFormData = z.infer<typeof chapterSchema>;\n\n// Section Schemas\nexport const sectionSchema = z.object({\n  title: z.string().min(2, \"Title must be at least 2 characters\"),\n  description: z.string().min(10, \"Description must be at least 10 characters\"),\n});\n\nexport type SectionFormData = z.infer<typeof sectionSchema>;\n\n// Guest Checkout Schema\nexport const guestSchema = z.object({\n  email: z.string().email(\"Invalid email address\"),\n});\n\nexport type GuestFormData = z.infer<typeof guestSchema>;\n\n// Notification Settings Schema\nexport const notificationSettingsSchema = z.object({\n  courseNotifications: z.boolean(),\n  emailAlerts: z.boolean(),\n  smsAlerts: z.boolean(),\n  notificationFrequency: z.enum([\"immediate\", \"daily\", \"weekly\"]),\n});\n\nexport type NotificationSettingsFormData = z.infer<\n  typeof notificationSettingsSchema\n>;\n"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,MAAM,eAAe,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IACnC,aAAa,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IAC/B,mBAAmB,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IACrC,gBAAgB,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IAClC,aAAa,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD;IACpB,cAAc,CAAA,GAAA,oIAAA,CAAA,UAAS,AAAD;AACxB;AAKO,MAAM,gBAAgB,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IACpC,OAAO,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IACzB,SAAS,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,IAAI;IAC5B,OAAO,CAAA,GAAA,oIAAA,CAAA,QAAO,AAAD,EAAE;QAAC,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD;QAAK,CAAA,GAAA,oIAAA,CAAA,aAAY,AAAD,EAAE;KAAM,EAAE,QAAQ;AAC3D;AAKO,MAAM,gBAAgB,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IACpC,OAAO,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;IACzB,aAAa,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,IAAI;AAClC;AAKO,MAAM,cAAc,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IAClC,OAAO,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,IAAI,KAAK,CAAC;AAC1B;AAKO,MAAM,6BAA6B,CAAA,GAAA,oIAAA,CAAA,SAAQ,AAAD,EAAE;IACjD,qBAAqB,CAAA,GAAA,oIAAA,CAAA,UAAS,AAAD;IAC7B,aAAa,CAAA,GAAA,oIAAA,CAAA,UAAS,AAAD;IACrB,WAAW,CAAA,GAAA,oIAAA,CAAA,UAAS,AAAD;IACnB,uBAAuB,CAAA,GAAA,oIAAA,CAAA,OAAM,AAAD,EAAE;QAAC;QAAa;QAAS;KAAS;AAChE","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file:///home/al_habib/Codes/practice/skill-nest/client/src/components/Header.tsx"],"sourcesContent":["/** @format */\n\nimport React from \"react\";\n\nconst Header = ({ title, subtitle, rightElement }: HeaderProps) => {\n    return (\n        <div className=\"mb-7 flex justify-between items-center\">\n            <div>\n                <h1 className=\"text-3xl font-bold text-white-50\">{title}</h1>\n                <p className=\"text-sm text-gray-500 mt-1\">{subtitle}</p>\n            </div>\n            {rightElement && <div>{rightElement}</div>}\n        </div>\n    );\n};\n\nexport default Header;\n"],"names":[],"mappings":"AAAA,YAAY;;;;;AAIZ,MAAM,SAAS,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAe;IAC1D,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;;kCACG,8OAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAClD,8OAAC;wBAAE,WAAU;kCAA8B;;;;;;;;;;;;YAE9C,8BAAgB,8OAAC;0BAAK;;;;;;;;;;;;AAGnC;uCAEe","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file:///home/al_habib/Codes/practice/skill-nest/client/src/components/SharedNotificationSetting.tsx"],"sourcesContent":["/** @format */\n\nimport { useUser } from \"@clerk/nextjs\";\nimport { useUpdateUserMutation } from \"@/state/api\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n    NotificationSettingsFormData,\n    notificationSettingsSchema,\n} from \"../lib/schemas\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport Header from \"./Header\";\n\nconst SharedNotificationSetting = ({\n    title = \"Notification Settings\",\n    subtitle = \"Manage your notification settings\",\n}: SharedNotificationSettingsProps) => {\n    const { user } = useUser();\n    const [updateUser] = useUpdateUserMutation();\n\n    const currentSettings =\n        (user?.publicMetadata as { settings?: UserSettings })?.settings || {};\n\n    const methods = useForm<NotificationSettingsFormData>({\n        resolver: zodResolver(notificationSettingsSchema),\n        defaultValues: {\n            courseNotifications: currentSettings.courseNotifications || false,\n            emailAlerts: currentSettings.emailAlerts,\n            smsAlerts: currentSettings.smsAlerts,\n            notificationFrequency: currentSettings.notificationFrequency,\n        },\n    });\n\n    const onSubmit = async (data: NotificationSettingsFormData) => {\n        if (!user) return;\n        const updatedUser = {\n            userId: user.id,\n            publicMetadata: {\n                ...user.publicMetadata,\n                settings: {\n                    ...currentSettings,\n                    ...data,\n                },\n            },\n        };\n\n        try {\n            await updateUser(updatedUser);\n        } catch (error) {\n            console.log(\"Failed to update user Settings\", error);\n        }\n    };\n\n    if (!user) {\n        return (\n            <div>\n                <h1>Please sign in to manage your settings</h1>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Header title={title} subtitle={subtitle} />\n        </div>\n    );\n};\n\nexport default SharedNotificationSetting;\n"],"names":[],"mappings":"AAAA,YAAY;;;;AAEZ;AACA;AAEA;AACA;AAIA;AACA;;;;;;;;AAEA,MAAM,4BAA4B,CAAC,EAC/B,QAAQ,uBAAuB,EAC/B,WAAW,mCAAmC,EAChB;IAC9B,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,+KAAA,CAAA,UAAO,AAAD;IACvB,MAAM,CAAC,WAAW,GAAG,CAAA,GAAA,mHAAA,CAAA,wBAAqB,AAAD;IAEzC,MAAM,kBACF,AAAC,MAAM,gBAAgD,YAAY,CAAC;IAExE,MAAM,UAAU,CAAA,GAAA,wKAAA,CAAA,UAAO,AAAD,EAAgC;QAClD,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE,qHAAA,CAAA,6BAA0B;QAChD,eAAe;YACX,qBAAqB,gBAAgB,mBAAmB,IAAI;YAC5D,aAAa,gBAAgB,WAAW;YACxC,WAAW,gBAAgB,SAAS;YACpC,uBAAuB,gBAAgB,qBAAqB;QAChE;IACJ;IAEA,MAAM,WAAW,OAAO;QACpB,IAAI,CAAC,MAAM;QACX,MAAM,cAAc;YAChB,QAAQ,KAAK,EAAE;YACf,gBAAgB;gBACZ,GAAG,KAAK,cAAc;gBACtB,UAAU;oBACN,GAAG,eAAe;oBAClB,GAAG,IAAI;gBACX;YACJ;QACJ;QAEA,IAAI;YACA,MAAM,WAAW;QACrB,EAAE,OAAO,OAAO;YACZ,QAAQ,GAAG,CAAC,kCAAkC;QAClD;IACJ;IAEA,IAAI,CAAC,MAAM;QACP,qBACI,8OAAC;sBACG,cAAA,8OAAC;0BAAG;;;;;;;;;;;IAGhB;IAEA,qBACI,8OAAC;kBACG,cAAA,8OAAC,4HAAA,CAAA,UAAM;YAAC,OAAO;YAAO,UAAU;;;;;;;;;;;AAG5C;uCAEe","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///home/al_habib/Codes/practice/skill-nest/client/src/app/%28dashboad%29/user/settings/page.tsx"],"sourcesContent":["/** @format */\n\nimport React from \"react\";\nimport SharedNotificationSetting from \"@/components/SharedNotificationSetting\";\n\nconst UserSettings = () => {\n    return (\n        <div className=\"w-3/5\">\n            <SharedNotificationSetting />\n        </div>\n    );\n};\n\nexport default UserSettings;\n"],"names":[],"mappings":"AAAA,YAAY;;;;AAGZ;;;AAEA,MAAM,eAAe;IACjB,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC,+IAAA,CAAA,UAAyB;;;;;;;;;;AAGtC;uCAEe","debugId":null}}]
}